// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user") // 'admin', 'user', 'technician'
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  equipment    Equipment[]
  maintenance  Maintenance[]

  @@map("users")
}

model Equipment {
  id              Int      @id @default(autoincrement())
  serialNumber    String   @unique @map("serial_number")
  invoiceNumber   String?  @map("invoice_number")
  brand           String
  model           String?
  unit            String
  city            String
  supportPhone    String?  @map("support_phone")
  status          String   @default("active") // 'active', 'maintenance', 'inactive'
  acquisitionDate DateTime? @map("acquisition_date")
  warrantyUntil   DateTime? @map("warranty_until")
  imageUrl        String?  @map("image_url")
  manualUrl       String?  @map("manual_url")
  description     String?
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  createdBy       Int?     @map("created_by")

  user          User?          @relation(fields: [createdBy], references: [id])
  maintenance   Maintenance[]
  alerts        Alert[]

  @@map("equipment")
}

model Maintenance {
  id                  Int      @id @default(autoincrement())
  equipmentId         Int      @map("equipment_id")
  type                String   // 'preventive', 'corrective'
  status              String   // 'completed', 'in_progress', 'scheduled', 'canceled'
  executionDate       DateTime @map("execution_date")
  nextMaintenanceDate DateTime? @map("next_maintenance_date")
  technician          String
  serviceTime         Int?     @map("service_time") // em minutos
  cost                Float?
  replacedParts       String?  @map("replaced_parts")
  serviceDescription  String   @map("service_description")
  additionalNotes     String?  @map("additional_notes")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")
  createdBy           Int?     @map("created_by")

  equipment     Equipment     @relation(fields: [equipmentId], references: [id])
  user          User?         @relation(fields: [createdBy], references: [id])
  alerts        Alert[]

  @@map("maintenance")
}

model Alert {
  id            Int      @id @default(autoincrement())
  equipmentId   Int      @map("equipment_id")
  maintenanceId Int?     @map("maintenance_id")
  type          String   // 'maintenance', 'warranty', 'other'
  status        String   @default("pending") // 'pending', 'completed', 'canceled'
  dueDate       DateTime @map("due_date")
  message       String
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  equipment     Equipment     @relation(fields: [equipmentId], references: [id])
  maintenance   Maintenance?  @relation(fields: [maintenanceId], references: [id])

  @@map("alerts")
}
